---
import { books } from "../data/books";
import { getUrlFromTitle } from "../utils/urlHelpers";

const allBooks = books.sort((a, b) => a.title.localeCompare(b.title));
const currentPath = Astro.url.pathname;

const isBookActive = (title: string) => {
  const bookUrl = `/bookshelf/${getUrlFromTitle(title)}`;
  return currentPath === bookUrl;
};
---

<aside class="book-sidebar">
  <div class="book-links">
    {
      allBooks.map((book) => {
        const href = `/bookshelf/${getUrlFromTitle(book.title)}`;
        return (
          <a
            href={href}
            class={`book-link ${isBookActive(book.title) ? "active" : ""}`}
          >
            <span class="book-dot">â€¢</span>
            {book.title}
          </a>
        );
      })
    }
  </div>
</aside>

<style>
  .book-sidebar {
    width: 400px;
    background: var(--color-bg-primary);
    padding: var(--space-md);
    position: fixed;
    height: 100vh;
    left: 250px;
    border-right: 1px solid var(--color-bg-secondary);
  }
  .book-links {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
    padding-top: var(--space-md);
  }
  .book-link {
    display: flex;
    align-items: center;
    color: var(--color-text-secondary);
    text-decoration: none;
    padding: var(--space-sm) var(--space-md);
    border-radius: 6px;
    transition: var(--transition-default);
    font-size: var(--text-lg);
    font-weight: 500;
  }
  .book-dot {
    opacity: 0;
    margin-right: var(--space-sm);
    transition: var(--transition-default);
  }
  .book-link:hover,
  .book-link.active {
    color: var(--color-text-primary);
    background-color: var(--color-bg-secondary);
  }
  .book-link:hover .book-dot,
  .book-link.active .book-dot {
    opacity: 1;
    color: var(--color-accent);
  }
</style>
